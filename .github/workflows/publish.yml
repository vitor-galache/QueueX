name: Build and deploy multiple packages

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Copy README to QueueX folder
        run: cp README.md QueueX/README.md

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Setup NuGet sources
        run: |
          mkdir -p $HOME/local-nuget-feed
          dotnet nuget add source $HOME/local-nuget-feed --name LocalFeed --configfile $HOME/.nuget/NuGet.Config || true
          dotnet nuget add source https://api.nuget.org/v3/index.json --name NuGetOrg --configfile $HOME/.nuget/NuGet.Config || true

      - name: Build QueueX.Abstractions
        run: dotnet build ./QueueX.Abstractions/QueueX.Abstractions.csproj --configuration Release

      - name: Build QueueX.RabbitMQ
        run: dotnet build ./QueueX.RabbitMQ/QueueX.RabbitMQ.csproj --configuration Release

      - name: Build QueueX
        run: dotnet build ./QueueX/QueueX.csproj --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

      - name: Pack QueueX.Abstractions
        run: dotnet pack ./QueueX.Abstractions/QueueX.Abstractions.csproj --configuration Release /p:PackageVersion=$VERSION -o ./artifacts

      - name: Publish QueueX.Abstractions
        run: dotnet nuget push ./artifacts/QueueX.Abstractions.*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Pack QueueX.RabbitMQ
        run: dotnet pack ./QueueX.RabbitMQ/QueueX.RabbitMQ.csproj --configuration Release /p:PackageVersion=$VERSION -o ./artifacts

      - name: Publish QueueX.RabbitMQ
        run: dotnet nuget push ./artifacts/QueueX.RabbitMQ.*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Pack QueueX
        run: dotnet pack ./QueueX/QueueX.csproj --configuration Release /p:PackageVersion=$VERSION -o ./artifacts

      - name: Publish QueueX
        run: dotnet nuget push ./artifacts/QueueX.*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate
